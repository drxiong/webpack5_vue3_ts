{
  "compilerOptions": {
    "target": "esnext",  //目标语言的版本
    "module": "esnext",  //指定生成代码的模板标准
    "noImplicitAny": true,  //不允许隐式的any类型
    "removeComments": false,  //删除注释
    "strict": true,  // 开启所有严格的类型检查
    "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块
    "moduleResolution": "node", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入
    "experimentalDecorators": true,
    "esModuleInterop": true,  // 允许export=导出，由import from 导入
    "allowSyntheticDefaultImports": true,
    "sourceMap": false,  //生成目标文件的sourceMap文化
    "baseUrl": ".", // 解析非相对模块的基地址，默认是当前目录
    "allowJs": false, // 是否允许编译器编译JS，JSX文件
    // "noEmit": true, // 不输出文件,即编译后不会生成任何js文件
    // "types": [  // 加载的声明文件包
    //   "webpack-env"
    // ],
    "paths": {   // 路径映射，相对于baseUrl
      "@/*": [
        "src/*"
      ]
    },
    "lib": [ // TS需要引用的库，即声明文件，es5 默认引用dom、es5、scripthost,如需要使用es的高级版本特性，通常都需要配置，如es8的数组新特性需要引入"ES2019.Array",
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  "exclude": [
    "node_modules"
  ]
}

